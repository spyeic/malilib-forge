plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	maven { url 'https://maven.terraformersmc.com/releases/' }
	// maven { url 'https://maven.quiltmc.org/repository/release/' }
}

ext.configFile = file "build.properties"

configFile.withReader {
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

dependencies {
	minecraft "com.mojang:minecraft:${config.minecraft_version}"
	mappings "net.fabricmc:yarn:${config.mappings_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${config.fabric_loader_version}"
	implementation "com.google.code.findbugs:jsr305:3.0.2"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:" + config.fabric_version

	modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:${config.fabric_resource_loader_version}"
	include "net.fabricmc.fabric-api:fabric-resource-loader-v0:${config.fabric_resource_loader_version}"

	modCompileOnly "com.terraformersmc:modmenu:${config.mod_menu_version}"
}

group = config.group + "." + config.mod_id
archivesBaseName = config.mod_file_name + '-' + config.minecraft_version_out
version = config.mod_version

if (version.endsWith('-dev')) {
	version += "." + new Date().format('yyyyMMdd.HHmmss')
}

processResources {
	// Exclude the GIMP image files
	exclude '**/*.xcf'
	exclude '**/xcf'

	// this will ensure that this task is redone when the versions change.
	//inputs.property "minecraft_version", project.config.minecraft_version

	inputs.property "mod_version", config.mod_version

	filesMatching("fabric.mod.json") {
		expand "mod_version": config.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.publish.dependsOn build
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId project.archivesBaseName

			// add all the jars that should be included when publishing to maven
			//artifact(jar)             { builtBy remapJar }
			from components.java
		}
	}

	repositories {
		maven {
			url "$projectDir/../../CommonMaven"
		}
	}
}
